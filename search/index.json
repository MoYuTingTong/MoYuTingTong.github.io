[{"content":"一级标题 1、字体格式强调\n我们可以使用下面的方式给我们的文本添加强调的效果\n强调 (示例：斜体)\n强调 (示例：斜体)\n加重强调 (示例：粗体)\n加重强调 (示例：粗体)\n特别强调 (示例：粗斜体)\n特别强调 (示例：粗斜体)\n2、代码\n\u0026lt;hello world\u0026gt;\n3、代码块高亮\n1 2 3 4 5 @Override protected void onDestroy() { EventBus.getDefault().unregister(this); super.onDestroy(); } 4、表格 （建议在表格前空一行，否则可能影响表格无法显示）\n表头（左对齐） 表头（居中对齐） 表头（右对齐） 单元格内容 单元格内容 单元格内容 单元格内容 单元格内容 单元格内容 三级标题\rNothing could be better if you could reply me at your early convenience.\n四级标题\r5、其他引用\n6、列表\n项目1 项目2 项目3 项目1 （一个号会显示为一个黑点，注意⚠️有空格，否则直接显示为项目1） 项目2 7、换行（建议直接在前一行后面补两个空格）\n直接回车不能换行，\n可以在上一行文本后面补两个空格，\n这样下一行的文本就换行了。 或者就是在两行文本直接加一个空行。 也能实现换行效果，不过这个行间距有点大。\n8、引用\n第一行引用文字\n——《GBT/20203333》\n五级标题 监测是否支持公式\n$$\\frac{1}{2}=x^2+1$$\nTO DO LIST\n要做的事情A 已完成的事情B 要做的事情A 已完成的事情B ","date":"2024-08-18T22:00:00+08:00","image":"https://MoYuTingTong.github.io/p/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/wallhaven-exwgw8_hu9474887201192795172.jpg","permalink":"https://MoYuTingTong.github.io/p/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/","title":"Markdown基本语法"},{"content":"Hello World.\n分区与工作流\rGit分区\rGit的分区包括工作区、暂存区、本地仓库（本地版本库）、远程仓库（远程版本库）。\n工作区（Workspace）\n工作区即本地代码所在的目录，同时也是存放 .git/ （本地仓库）的目录。\n暂存区（Index/Stage）\n暂存区是工作区和本地仓库的缓存空间，里面记录着即将提交给本地仓库（版本库）的文件修改信息，.git/ 目录里的index文件就是暂存区。\n本地仓库（Repository）\n本地仓库也称本地库或版本库，存放了本地的所有版本（commit提交记录），本地仓库的文件都在 .git/ 目录中。\n远程仓库（Remote）\n远程仓库在网络上，GitHub、Gitee和GitLab都能创建远程仓库，和本地仓库一样，远程仓库存放的也是不同的代码版本，只是这些版本可以来自多个本地仓库。\ngit工作流\r暂存区文件\rGit文件状态\r在管理暂存区之前，我们还需要了解工作区文件的几种状态：\nUntracked未跟踪，工作区中没有加入过暂存区的文件，不参与版本控制;\nUnmodified未修改，加入版本控制，但和版本库中文件快照相同；\nModified已修改，加入版本控制，而且和上次加入版本库时的快照不同；\nStaged已暂存，下一步可以提交到本地仓库（版本库）\ngit status命令可以用来查看工作区文件当前的状态：\n1 2 3 4 5 git status [filename] #查看指定文件的状态 git status #查看所有文件状态 git status -s #精简的方式显示文件状态 添加文件到暂存区\r1 2 3 git add [filename] #添加指定文件到暂存区 git add -A #添加工作区所有文件到暂存区 删除暂存区的文件\r1 git rm --cached [filename] #将指定文件从暂存区移除 文件修改管理\rModified状态下对比文件：\ngit diff对比不同的状态下的同一文件\ndiff对比两个不同的文件\n提交文件到本地仓库\r提交命令\r1 2 3 git commit -m “message” [filename] #添加指定文件到本地仓库 git commit -m “message” #添加所有文件到本地仓库 查看日志\r1 2 3 4 5 6 7 git log #查看提交记录 git log --pretty=oneline #以一行的形式显示所有提交版本 git log --oneline #一行显示，只显示哈希值的前7位 git reflog #显示历史提交版本与当前版本的间隔数 推送到远程仓库\r创建远程仓库\r添加远程仓库地址\r1 git remote add \u0026lt;name\u0026gt; \u0026lt;url\u0026gt; #\u0026lt;name\u0026gt;为远程仓库的自定义本地别名 \u0026lt;url\u0026gt;为为仓库网络地址：\n如果用https的方式上传代码，需要添加远程仓库https地址；\n如果用ssh上传代码，则url填远程仓库ssh地址。\n查看远程仓库地址\r1 2 3 git remote -v git config -l 删除远程仓库地址\r1 git remote remove \u0026lt;name\u0026gt; #删除本地别名为\u0026lt;name\u0026gt;的远程地址 推送到远程仓库\r","date":"2024-08-18T20:00:00+08:00","image":"https://MoYuTingTong.github.io/p/git%E5%AD%A6%E4%B9%A0/wallhaven-5g57w1_hu15102694089725040071.jpg","permalink":"https://MoYuTingTong.github.io/p/git%E5%AD%A6%E4%B9%A0/","title":"git学习"}]